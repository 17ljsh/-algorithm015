class Solution {
public:
    int findMin(vector<int>& nums) {
        int low(1),high(nums.size() - 1);
        while (low <= high) {
            int mid = low + (high - low) / 2;
            //目标值比它前一个要小（nums[0]另外处理）
            if (nums[mid] < nums[mid - 1]) {
                return nums[mid];
            }
            //mid在较小的右部，应往前搜索
            if (nums[mid] < nums[0]) {
                high = mid -1;
            }
            else {
                low = mid + 1;
            }
        }
        //没找着，即第一个就是最小的
        return nums[0];
    }
};