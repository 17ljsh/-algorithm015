/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        queue<Node*> q;
        vector<vector<int>> res;
        if (!root) {
            return res;
        }
        q.push(root);
        Node* node;
        while (!q.empty()) {
            //用length来记录当前层结点个数，只处理length个数据
            int length = q.size();
            vector<int> t;
            for (int i = 0; i < length; i++) {
                node = q.front();
                q.pop();
                //往队尾添加数据
                t.push_back(node->val);
                //往队尾添加孩子节点
                for (int j = 0; j < node->children.size();j++) {
                    q.push(node->children[j]);
                }
            }
            //将当前层的数据推入数组
            res.push_back(t);
        }
        return res;
    }
};