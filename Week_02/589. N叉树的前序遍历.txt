/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> preorder(Node* root) {
        //前序遍历用栈比较合适
        vector<int> res;
        deque<Node*> dq;
        if (!root) {
            return res;
        }

        dq.push_back(root);
        Node* node;
        while (!dq.empty()) {
            node = dq.back();
            dq.pop_back();
            res.push_back(node->val);
            //这里需要反着存放孩子节点
            for (int i = node->children.size() - 1; i >= 0; i--) {
                dq.push_back(node->children[i]);
            }
        }
        return res;
    }
};
